openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://localhost/api'
    description: local

components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:

  /cities/{id}:
    get:
      tags:
        - City
      summary: Get current city
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '404':
          description: City is not exist
          content:
            application/json:
              schema:
                example: City is not found
        '200':
          description: Successful displayed all cities
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: integer
                      format: int32
                      example: 5
                    name:
                      type: string
                      example: eligendi
                    country_id:
                      type: integer
                      format: nullable
                      example: 4

                    created_at:
                      type: string
                      format: date-time
                      nullable: true
                    updated_at:
                      type: string
                      format: date-time
                      nullable: true

    delete:
      tags:
        -  Delete cities
      summary: Delete city
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      security:
        - BearerToken: [ ]

      responses:

        '404':
          description: City is not exist
          content:
            application/json:
              schema:
                example: City is not found
        '401':
          $ref: 'exceptions.yaml#/components/responses/adminIsNotAuthorize'
        '200':
          description: Successful deleted city
          content:
            application/json:
              schema:
                type: object
                properties:
                    success:
                      type: boolean
    put:
      tags:
        - Update city
      summary: update current city
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      security:
        - BearerToken: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: test City
      responses:

        '422':
          description: Incorrect entering data
          content:
            application/json:
              schema:
               type: object
              examples:
                NameIsNotString:
                  value:
                    message: 'The name field must be a string.'
                    error:
                        name: 'The name field must be a string.'
                NameIsNotPresent:
                  value:
                    message: 'The name field is required.'
                    error:
                        name: 'The name field is required.'
        '404':
          description: City is not exist
          content:
            application/json:
              schema:
                example: City is not found
        '401':
          $ref: 'exceptions.yaml#/components/responses/adminIsNotAuthorize'
        '200':
          description: Successful updated city
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: integer
                      format: int32
                      example: 5
                    name:
                      type: string
                      example: eligendi
                    country_id:
                      type: integer
                      format: nullable
                      example: 4

                    created_at:
                      type: string
                      format: date-time
                      nullable: true
                    updated_at:
                      type: string
                      format: date-time
                      nullable: true
  /cities:
    post:
      tags:
        -  Create cities
      summary: Create city
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: test City
                country_id:
                  type: integer
                  example: 3

      security:
        - BearerToken: [ ]
      responses:

        '422':
          description: Incorrect entering data
          content:
            application/json:
              schema:
               type: object
              examples:
                NameIsNotString:
                  value:
                    message: 'The name field must be a string.'
                    error:
                        name: 'The name field must be a string.'
                NameIsNotPresent:
                  value:
                    message: 'The name field is required.'
                    error:
                        name: 'The name field is required.'
                CountryIdIsNotValidUUID:
                  value:
                    message: 'The country id field must be a valid UUID.'
                    error:
                        country: 'The country id field must be a valid UUID.'
                CountryIdIsNotPresent:
                  value:
                    message: 'The country id field is required.'
                    error:
                        country: 'The country id field is required.'
        '401':
          $ref: 'exceptions.yaml#/components/responses/adminIsNotAuthorize'
        '200':
          description: Successful created city
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: integer
                      format: int32
                      example: 5
                    name:
                      type: string
                      example: eligendi
                    country_id:
                      type: integer
                      format: nullable
                      example: 4

                    created_at:
                      type: string
                      format: date-time
                      nullable: true
                    updated_at:
                      type: string
                      format: date-time
                      nullable: true

    get:
      tags:
        - Cities
      summary: Get all cities
      responses:
        '200':
          description: Successful displayed all cities
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    format: int32
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int32
                          example: 1
                        name:
                          type: string
                          example: et
                        country_id:
                          type: string
                          format: nullable
                        created_at:
                          type: string
                          format: date-time
                          nullable: true
                        updated_at:
                          type: string
                          format: date-time
                          nullable: true
                  first_page_url:
                    type: string
                    example: http://localhost/api/cities?page=1
                  from:
                    type: integer
                    format: int32
                    example: 1
                  last_page:
                    type: integer
                    format: int32
                    example: 10
                  last_page_url:
                    type: string
                    example: http://localhost/api/cities?page=10
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: nullable
                        label:
                          type: string
                          example: &laquo; Previous
                        active:
                          type: boolean

                  next_page_url:
                    type: string
                    example: http://localhost/api/cities?page=2
                  path:
                    type: string
                    example: http://localhost/api/cities
                  per_page:
                    type: integer
                    format: int32
                    example: 10
                  prev_page_url:
                    type: string
                    format: nullable
                  to:
                    type: integer
                    format: int32
                    example: 10
                  total:
                    type: integer
                    format: int32
                    example: 99

