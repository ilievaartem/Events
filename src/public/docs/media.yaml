openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://localhost/api'
    description: local

components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:

  /media/{id}:
    get:
      tags:
        - Media
      summary: Get current question
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Media are not found
          content:
            application/json:
              schema:
                example: Media are not found
        '200':
          description: Successful displayed all media
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: string
                      format: uuid
                    path:
                      type: string
                    event_id:
                      type: string
                      format: uuid
                    author_id:
                      type: string
                      format: uuid
                    comment_id:
                      type: string
                      format: uuid


                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time

    delete:
      tags:
        -  Delete media
      summary: Delete question
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      security:
        - BearerToken: [ ]

      responses:
        '404':
          description: Media are not found
          content:
            application/json:
              schema:
                example: Media are not found

        '401':
          description:  User is not author or not authorize
          content:
            application/json:
              schema:
                type: string
              examples:
                userIsNotAuthorize:
                  value: User is not authorize
                userIsNotAuthor:
                  value: User is not author
        '200':
          description: Successful deleted question
          content:
            application/json:
              schema:
                type: object
                properties:
                    success:
                      type: boolean

  /media/comments/{id}:
    post:
      tags:
        -  Create media
      summary: Create question
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      security:
        - BearerToken: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photos[]:
                  type: array
                  items:
                    type: string
                    format: binary


      responses:
        '401':
          $ref: 'exceptions.yaml#/components/responses/userIsNotAuthorize'
        '404':
          description: User or Event or Comment not exist
          content:
            application/json:
              schema:
                type: string
              examples:
                UserIsNotExist:
                  value: User does not found
                EventIsNotExist:
                  value: Event does not found
                CommentIsNotExist:
                  value: Comment does not found

        '422':
          description: Incorrect media type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'The photos.0 field must be a file of type: jpg bmp png.'
                  error:
                    type: object
                    properties:
                      photos:
                        type: array
                        items:
                         example: 'The photos.0 field must be a file of type: jpg, bmp, png.'


        '200':
          description: Successful displayed all media
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: string
                    format: int32
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        path:
                          type: string
                        event_id:
                          type: string
                          format: uuid
                        author_id:
                          type: string
                          format: uuid
                        comment_id:
                          type: string
                          format: uuid
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  first_page_url:
                    type: string
                    example: http://localhost/api/media?page=1
                  from:
                    type: integer
                    format: int32
                    example: 1
                  last_page:
                    type: integer
                    format: int32
                    example: 10
                  last_page_url:
                    type: string
                    example: http://localhost/api/media?page=10
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: nullable
                        label:
                          type: string
                          example: &laquo; Previous
                        active:
                          type: boolean

                  next_page_url:
                    type: string
                    example: http://localhost/api/media?page=2
                  path:
                    type: string
                    example: http://localhost/api/media
                  per_page:
                    type: integer
                    format: int32
                    example: 10
                  prev_page_url:
                    type: string
                    format: nullable
                  to:
                    type: integer
                    format: int32
                    example: 10
                  total:
                    type: integer
                    format: int32
                    example: 99

  /media:
    get:
      tags:
        - Media
      summary: Get all media
      responses:
        '200':
          description: Successful displayed all media
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: string
                    format: int32
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        path:
                          type: string
                        event_id:
                          type: string
                          format: uuid
                        author_id:
                          type: string
                          format: uuid
                        comment_id:
                          type: string
                          format: uuid
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  first_page_url:
                    type: string
                    example: http://localhost/api/media?page=1
                  from:
                    type: integer
                    format: int32
                    example: 1
                  last_page:
                    type: integer
                    format: int32
                    example: 10
                  last_page_url:
                    type: string
                    example: http://localhost/api/media?page=10
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: nullable
                        label:
                          type: string
                          example: &laquo; Previous
                        active:
                          type: boolean

                  next_page_url:
                    type: string
                    example: http://localhost/api/media?page=2
                  path:
                    type: string
                    example: http://localhost/api/media
                  per_page:
                    type: integer
                    format: int32
                    example: 10
                  prev_page_url:
                    type: string
                    format: nullable
                  to:
                    type: integer
                    format: int32
                    example: 10
                  total:
                    type: integer
                    format: int32
                    example: 99

